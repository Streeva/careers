// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostBase64DecodeOKCode is the HTTP code returned for type PostBase64DecodeOK
const PostBase64DecodeOKCode int = 200

/*PostBase64DecodeOK OK

swagger:response postBase64DecodeOK
*/
type PostBase64DecodeOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewPostBase64DecodeOK creates PostBase64DecodeOK with default headers values
func NewPostBase64DecodeOK() *PostBase64DecodeOK {

	return &PostBase64DecodeOK{}
}

// WithPayload adds the payload to the post base64 decode o k response
func (o *PostBase64DecodeOK) WithPayload(payload io.ReadCloser) *PostBase64DecodeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post base64 decode o k response
func (o *PostBase64DecodeOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBase64DecodeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PostBase64DecodeBadRequestCode is the HTTP code returned for type PostBase64DecodeBadRequest
const PostBase64DecodeBadRequestCode int = 400

/*PostBase64DecodeBadRequest Bad request

swagger:response postBase64DecodeBadRequest
*/
type PostBase64DecodeBadRequest struct {
}

// NewPostBase64DecodeBadRequest creates PostBase64DecodeBadRequest with default headers values
func NewPostBase64DecodeBadRequest() *PostBase64DecodeBadRequest {

	return &PostBase64DecodeBadRequest{}
}

// WriteResponse to the client
func (o *PostBase64DecodeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
